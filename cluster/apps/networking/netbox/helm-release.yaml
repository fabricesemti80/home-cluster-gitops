---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: netbox
  namespace: networking
spec:
  releaseName: netbox
  chart:
    spec:
      # renovate: registryUrl=https://charts.boo.tc
      chart: netbox
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bootc-charts
        namespace: flux-system
  interval: 5m
  install:
    remediation:
      retries: 3
  test:
    enable: false
  values:
    existingSecret: cluster-secrets
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          # traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # hajimari.io/enable: "true"
          # hajimari.io/icon: "netbox"
          # hajimari.io/appName: "Netbox"
          hajimari.io/enable: "true"
          hajimari.io/icon: "netbox"
          cert-manager.io/cluster-issuer: "letsencrypt-production" # needs cert
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-forward-auth@kubernetescrd # needs oauth
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}" # needs external DNS # ? https://github.com/kubernetes-sigs/external-dns/blob/master/docs/faq.md
          external-dns/is-public: "true"
        hosts:
          - host: "netbox.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "netbox.${SECRET_DOMAIN}"
      # annotations:
      #   kubernetes.io/ingress.class: traefik
      #   traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
      #   kubernetes.io/tls-acme: "true"
      #   cert-manager.io/cluster-issuer: letsencrypt-production
      #   hajimari.io/enable: "true"
      #   hajimari.io/icon: "netbox"
    persistence:
      enabled: true
      existingClaim: "netbox-data"
