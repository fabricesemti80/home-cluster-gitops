---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: netbox
  namespace: networking
spec:
  interval: 5m
  timeout: 10m0s
  chart:
    spec:
      # renovate: registryUrl=https://charts.boo.tc
      chart: netbox
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bootc-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: netboxcommunity/netbox
      pullPolicy: IfNotPresent
      tag: v3.2.5
    timeZone: Europe/London

    postgresql:
      enabled: false

    redis:
      enabled: true

    persistence:
      enabled: true
      existingClaim: netbox-config-v1

    ingress:
      enabled: true
      className: nginx
      annotations:
        # kubernetes.io/tls-acme: 'true'
        # cert-manager.io/cluster-issuer: letsencrypt-prod
        # nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.0.0/16,77.37.244.212/32,94.141.170.143/32
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        hajimari.io/enable: "true"
        hajimari.io/icon: "lan"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        external-dns/is-public: "true"
        traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-forward-auth@kubernetescrd
      hosts:
        - host: "netbox.${SECRET_DOMAIN}"
          paths:
            - /
      tls:
        - secretName: netbox-tls
          hosts:
            - "netbox.${SECRET_DOMAIN}"
    maxPageSize: 0
    # remoteAuth:
    #   enabled: false
    #   backend: netbox.authentication.LDAPBackend
    #   ldap:
    #     serverUri: ldaps://ak-outpost-ldap-netbox.kube-system:636
    #     ignoreCertErrors: true
    #     userDnTemplate:
    #     userSearchBaseDn: OU=users,DC=ldap,DC=goauthentik,DC=io
    #     userSearchAttr: sAMAccountName
    #     groupSearchBaseDn: DC=ldap,DC=goauthentik,DC=io
    #     groupSearchClass: group
    #     groupType: GroupOfNamesType
    #     findGroupPerms: true
    #     mirrorGroups: true
    #     mirrorGroupsExcept:
    #     cacheTimeout: 3600
    #     requireGroupDn: ''
    #     isAdminDn: CN=Netbox Admins,OU=groups,DC=ldap,DC=goauthentik,DC=io
    #     isSuperUserDn: CN=Netbox SuperUsers,OU=groups,DC=ldap,DC=goauthentik,DC=io
    #     attrFirstName: givenName
    #     attrLastName: sn
    #     attrMail: mail

  valuesFrom:
    - kind: Secret
      name: netbox-helm-values
      valuesKey: values.yaml
      optional: false
